/*+----------------------------------------------------------------+
  |	Title:		LogicClueLogCell.hpp [共通環境]
  |	Comment:	ロジック：ヒントログ単位
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __LOGIC_CLUE_LOG_CELL_HPP__
#define __LOGIC_CLUE_LOG_CELL_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"

#include "app/logic/LogicConst.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//-------------------------------------------------------------------------------
// ロジックヒントログセル
//-------------------------------------------------------------------------------
// [CLogicClueUpdater]により、ヒント数字に対するマスの範囲がどう判定されたのかを保持するクラス
// データはヒント数字[CLogicClue]毎に保持され、１回の判定毎に、１つのデータが登録される
//-------------------------------------------------------------------------------
class CLogicClueLogCell {
protected:
    // 容量がバカにならないので節約（※各種値は[-1〜50]の値域を想定）
    int8 m_nUpdateType;     // 更新タイプ：[CLogicClueUpdater]で処理されたタイプ
    int8 m_nSolidStartAt;   // マス開始位置
    int8 m_nSolidNum;       // マス数

public:
    // コンストラクタ＆デストラクタ
	CLogicClueLogCell( void );
	virtual ~CLogicClueLogCell( void );

    // クリア
    void clear( void );
    
    // 設定
    void set( int type, int at, int num );
    
    // 値の調整
    inline void addSolidStartAt( int add ){ m_nSolidStartAt += add; }
    
    // 取得
    inline int getUpdateType( void ){ return( m_nUpdateType ); }
    inline int getSolidStartAt( void ){ return( m_nSolidStartAt ); }
    inline int getSolidNum( void ){ return( m_nSolidNum ); }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __LOGIC_CLUE_LOG_CELL_HPP__
