/*+----------------------------------------------------------------+
  |	Title:		ImgBinData.hpp [共通環境]
  |	Comment:	イメージバイナリデータ
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __IMG_BIN_DATA_HPP__
#define __IMG_BIN_DATA_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
#define IMG_FILE_NAME_LEN       32

/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// イメージバイナリデータ
//----------------------------------------
class CImgBinData{
public:
    //------------------------
    // バイナリサイズ取得
    //------------------------
    inline static int GetBinSize( void ){
        return( IMG_FILE_NAME_LEN + 4 );
    }

protected:
    //------------------------
    // メンバー
    //------------------------
    char   m_cArrFileName[IMG_FILE_NAME_LEN];   // [32]: 画像ファイル名
    uint32 m_nOption;                           // [4]: オプション

public:
    //------------------------
    // コンストラクタ／デストラクタ
    //------------------------
    CImgBinData(){}
    virtual ~CImgBinData(){}

    //------------------------
    // 取得
    //------------------------
    inline const char* getFileName( void ){ return( m_cArrFileName ); }
    inline DWORD getOption( void ){ return( m_nOption ); }

    //-----------------------------------------------------
    // 読み込み（※[pIB]は有効である前提＆値の整合性等の判断はしない）
    //-----------------------------------------------------
    inline void read( CInputBuffer* pIB ){
        pIB->readBlock( m_cArrFileName, IMG_FILE_NAME_LEN );
        m_nOption = pIB->readUint32();
    }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __IMG_BIN_DATA_HPP__
