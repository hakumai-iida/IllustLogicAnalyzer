/*+----------------------------------------------------------------+
  |	Title:		ShaderBinData.hpp [共通環境]
  |	Comment:	シェーダーバイナリデータ
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __SHADER_BIN_DATA_HPP__
#define __SHADER_BIN_DATA_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
#define SHADER_SRC_NAME_LEN        32

/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// シェーダーバイナリデータ
//----------------------------------------
class CShaderBinData{
public:
    //------------------------
    // バイナリサイズ取得
    //------------------------
    inline static int GetBinSize( void ){
        return( 2*SHADER_SRC_NAME_LEN );        
    }

protected:
    //------------------------
    // メンバー
    //------------------------
    char m_cArrVertexName[SHADER_SRC_NAME_LEN];
    char m_cArrFragmentName[SHADER_SRC_NAME_LEN];

public:
    //------------------------
    // コンストラクタ／デストラクタ
    //------------------------
    CShaderBinData(){}
    virtual ~CShaderBinData(){}

    //------------------------
    // 取得
    //------------------------
    inline const char* getVertexName( void ){ return( m_cArrVertexName ); }
    inline const char* getFragmentName( void ){ return( m_cArrFragmentName ); }

    //-----------------------------------------------------
    // 読み込み（※[pIB]は有効である前提＆値の整合性等の判断はしない）
    //-----------------------------------------------------
    inline void read( CInputBuffer* pIB ){
        pIB->readBlock( m_cArrVertexName, SHADER_SRC_NAME_LEN );
        pIB->readBlock( m_cArrFragmentName, SHADER_SRC_NAME_LEN );
    }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __SHADER_BIN_DATA_HPP__
