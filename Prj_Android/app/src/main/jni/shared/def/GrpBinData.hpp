/*+----------------------------------------------------------------+
  |	Title:		GrpBinData.hpp [共通環境]
  |	Comment:	スプライトグループバイナリデータ
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __GRP_BIN_DATA_HPP__
#define __GRP_BIN_DATA_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
// スプライトグループ内のスプライト数
#define NUM_SPR_IN_GRP      12

/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// スプライトグループバイナリデータ
//----------------------------------------
class CGrpBinData{
public:
    //------------------------
    // バイナリサイズ取得
    //------------------------
    inline static int GetBinSize( void ){
        return( 2*NUM_SPR_IN_GRP );
    }

protected:
    //------------------------
    // メンバー
    //------------------------
    // [m_eArrSpr]に対して[0]から走査できるように配列末端に番兵を置く関係で要素に＋１
    eSPR m_eArrSpr[NUM_SPR_IN_GRP+1];   // [enum/2xNUM_SPR_IN_GRP]: 構成要素

public:
    //------------------------
    // コンストラクタ／デストラクタ
    //------------------------
    CGrpBinData(){}
    virtual ~CGrpBinData(){}

    //------------------------
    // 取得
    //------------------------
    inline eSPR* getSprArr( void ){ return( m_eArrSpr ); }
    inline eSPR getSprAt( int at ){
        if( at >= 0 && at < NUM_SPR_IN_GRP ){
            return( m_eArrSpr[at] );
        }
        return( eSPR_INVALID );
    }
    
    // スプライト数の取得
    inline int getSprNum( void ){
        int num = 0;
        for( int i=0; i<NUM_SPR_IN_GRP; i++ ){
            if( IS_SPR_VALID( m_eArrSpr[i] ) ){
                num++;
            }
        }
        return( num );
    }
    
    //-----------------------------------------------------
    // 読み込み（※[pIB]は有効である前提＆値の整合性等の判断はしない）
    //-----------------------------------------------------
    inline void read( CInputBuffer* pIB ){
        for( int i=0; i<NUM_SPR_IN_GRP; i++ ){
            m_eArrSpr[i] = (eSPR)pIB->readInt16();
        }
        
        // 番兵を指定しておく
        m_eArrSpr[NUM_SPR_IN_GRP] = eSPR_INVALID;
    }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __GRP_BIN_DATA_HPP__
