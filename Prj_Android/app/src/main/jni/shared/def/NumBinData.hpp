/*+----------------------------------------------------------------+
  |	Title:		NumBinData.hpp [共通環境]
  |	Comment:	ナンバーバイナリデータ
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __NUM_BIN_DATA_HPP__
#define __NUM_BIN_DATA_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "draw/DrawConst.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// ナンバーバイナリデータ
//----------------------------------------
class CNumBinData{
public:
    //------------------------
    // バイナリサイズ取得
    //------------------------
    inline static int GetBinSize( void ){
        return( 2 + 2 + 1*2 + 2 );
    }

protected:
    //------------------------
    // メンバー
    //------------------------
    eGRP            m_eGrp;             // [enum/2]: 利用するグループID
    int16           m_nMarginX;         // [2]: 横方向のマージン
    bool            m_bRenderAtOnce;    // [1]: 一括レンダー可能か？
    bool            m_bDummy;           // [1]: ダミー（パディング）
    eDRAW_SET_TYPE  m_eDrawSetType;     // [enum/2]: 描画設定

public:
    //------------------------
    // コンストラクタ／デストラクタ
    //------------------------
    CNumBinData(){}
    virtual ~CNumBinData(){}

    //------------------------
    // 取得
    //------------------------
    inline eGRP getGrp( void ){ return( m_eGrp ); }
    inline int getMarginX( void ){ return( m_nMarginX ); }
    inline bool isRenderAtOnce( void ){ return( m_bRenderAtOnce ); }
    //inline bool isDummy( void ){ return( m_bDummy ); }
    inline eDRAW_SET_TYPE getDrawSetType( void ){ return( m_eDrawSetType ); }

    //-----------------------------------------------------
    // 読み込み（※[pIB]は有効である前提＆値の整合性等の判断はしない）
    //-----------------------------------------------------
    inline void read( CInputBuffer* pIB ){
        m_eGrp = (eGRP)pIB->readInt16();
        m_nMarginX = pIB->readInt16();
        m_bRenderAtOnce = (pIB->readUint8() != 0);
        m_bDummy = (pIB->readUint8() != 0);
        m_eDrawSetType = (eDRAW_SET_TYPE)pIB->readInt16();
    }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __NUM_BIN_DATA_HPP__
