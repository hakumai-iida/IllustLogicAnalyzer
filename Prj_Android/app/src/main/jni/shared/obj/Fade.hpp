/*+----------------------------------------------------------------+
  |	Title:		Fade.hpp [共通環境]
  |	Comment:	フェード
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __FADE_HPP__
#define __FADE_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "Obj.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// フェード
//----------------------------------------
class CFade: public CObj{
protected:
	int  m_nRGBA;			// フェード色
	int  m_nCountDefault;	// デフォルトカウント
	bool m_bFadeActive;		// フェード中か？
	bool m_bFadeIn;			// フェードイン中か？（※フラグがオフならフェードアウト中）

public:
	// コンストラクタ＆デストラクタ
	CFade( void );
    virtual ~CFade( void ){}
    
    // クリア（※初期化用）
    void clearFade( void );

	// 設定
	inline void setDefaultCount( int frame ){ m_nCountDefault = frame; }
	inline void setRGBA( int rgba ){ m_nRGBA = rgba; }
	inline void setFadeIn( int frame=-1 ){ setFade0( frame, true ); }
	inline void setFadeOut( int frame=-1 ){ setFade0( frame, false ); }

	// 判定
	bool isFadeActive( void ){ return( m_bFadeActive ); }

protected:
	void setFade0( int frame, bool isFadeIn );

	virtual void update0( void );
	virtual void onDraw0( void );
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __FADE_HPP__
