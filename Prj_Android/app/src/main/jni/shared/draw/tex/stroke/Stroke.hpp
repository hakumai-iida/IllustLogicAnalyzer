/*+----------------------------------------------------------------+
  |	Title:		Stroke.hpp [共通環境]
  |	Comment:	ストローク（※アンカーポイントを結ぶ線の見た目部分）
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __STROKE_HPP__
#define __STROKE_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "StrokeConst.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体型宣言
  +----------------------------------------------------------------+*/
//-----------------------------------------------------------------
// ストロークの出力セル（※１回の描画で出力する情報）
//-----------------------------------------------------------------
typedef struct{
    BYTE* pBuf;         // ドット情報
    int sizeW, sizeH;   // ドットの縦横サイズ
    int ofsX, ofsY;     // 出力時のオフセット（※１ドットを超えるはみ出しはこの値で対応される）
} stSTROKE_OUTPUT_CELL;

/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// ストローク
//----------------------------------------
class CStroke{
public:
    static eSTROKE_HOOK_TARGET AdjustHookTargetForSlotIndex( eSTROKE_HOOK_TARGET target, int slotIndex );
    static eSTROKE_TOUCH_TARGET AdjustTouchTargetForSlotIndex( eSTROKE_TOUCH_TARGET target, int slotIndex );

protected:
    //------------------------------
    // 設定値
    //------------------------------
    eSTROKE_TYPE        m_eType;       // タイプ
    float               m_fSize;       // ストロークサイズ
    float               m_fOfsRange;   // 出力オフセット範囲（※この値が大きいほど線がブレる）

    // work
    stSTROKE_OUTPUT_CELL m_stOutputCell;    // 出力情報

public:
    // コンストラクタ／デストラクタ
    CStroke( void );
    virtual ~CStroke( void ){}
    
    // クリア
    void clear( void );

    //-----------------------------------------------------
    // ストローク設定
    //-----------------------------------------------------
    bool set( eSTROKE_TYPE type, float size, float range );
    
    // 判定
    inline bool isValid( void ){ return( m_eType != eSTROKE_TYPE_INVALID ); }

    // 取得
    inline eSTROKE_TYPE getType( void ){ return( m_eType ); }
    inline float getSize( void ){ return( m_fSize ); }
    inline float getOfsRange( void ){ return( m_fOfsRange ); }

    //-----------------------------------------------------------------------
    // ストローク取得：ドットのはみ出し具合によるテクスチャバッファを返す
    // [CBezier]でラインを描画する際、１ドット毎にテクスチャバッファを取り出して描画する想定
    //-----------------------------------------------------------------------
    // [rateOutX/rateOutY]にははみ出し具合を[0.0f-1.0f)で指定
    // [pW/pH]に画素情報の縦横幅が設定される
    // [scale]は出力範囲への補正値となる（※大きいほど出力位置がブレる）
    //-----------------------------------------------------------------------
    stSTROKE_OUTPUT_CELL* getStrokeCell( float rateOutX, float rateOutY, float scale=1.0f );
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	/* __STROKE_HPP__ */
