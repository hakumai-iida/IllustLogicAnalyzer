/*+----------------------------------------------------------------+
  |	Title:		TexCacheBase.hpp [GLES2.0環境]
  |	Comment:	テクスチャキャッシュ基底
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __TEX_CACHE_BASE_HPP__
#define __TEX_CACHE_BASE_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "Tex.hpp"
#include "draw/DrawCell.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// テクスチャキャッシュ基底
//----------------------------------------
class CTexCacheBase{
protected:
    // 描画用ワーク（※[CDrawCell::GetFreeCell]と同様に全てのオブジェクトから使い回される）
	static CDrawCell s_oDC;

protected:
	// キャッシュテクスチャ
	CTex m_oTex;

	// 未使用カウンタ（※空きキャッシュ枠が無くなった際の上書き候補判定用）
	int m_nUnusedCount;

public:
    // コンストラクタ／デストラクタ
	CTexCacheBase( void );
    virtual ~CTexCacheBase( void ){}

    // クリア
	void clear( void );

	// 更新（※未使用カウンタのインクリメント）
	void update( void ){ if( isValid() ){ m_nUnusedCount++; } }

	// 取得
	int getUnusedCount( void ){ return( m_nUnusedCount ); }
	CTex* getCachedTex( void );

	// 判定
	bool isValid( void ){ return( m_oTex.isValid() ); }

protected:
	void resetUnusedCount( void ){ m_nUnusedCount = 0; }
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
#endif	// __TEX_CACHE_BASE_HPP__
