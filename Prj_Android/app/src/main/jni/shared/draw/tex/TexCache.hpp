/*+----------------------------------------------------------------+
  |	Title:		TexCache.hpp [GLES2.0環境]
  |	Comment:	テクスチャキャッシュ
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Header Define	ヘッダ定義
  +----------------------------------------------------------------+*/
#ifndef __TEX_CACHE_HPP__
#define __TEX_CACHE_HPP__

/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "TexCacheBase.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Class		クラス定義
  +----------------------------------------------------------------+*/
//----------------------------------------
// テクスチャキャッシュ
//----------------------------------------
class CTexCache: public CTexCacheBase{
protected:
	eDRAW_SHADER m_eDrawShader;
	CTex* m_pTexSrcDot;
	CTex* m_pTexSrcPal;

	int m_nId;

public:
	CTexCache( void );
    virtual ~CTexCache( void ){}

	CTex* getTexDot( void ){ return( (isValid())? m_pTexSrcDot: NULL ); }

	// 無効化
	void invalidate( void );

	//----------------------------------------
	// 汎用キャッシュ
	//----------------------------------------
	bool isCacheHit( eDRAW_SHADER shader, CTex* pTexDot, CTex* pTexPal );
	CTex* cacheTex( eDRAW_SHADER shader, CTex* pTexDot, CTex* pTexPal );

	// ID判定
	bool isCacheHitForId( int id );
};

/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/

#endif	// __TEX_CACHE_HPP__
