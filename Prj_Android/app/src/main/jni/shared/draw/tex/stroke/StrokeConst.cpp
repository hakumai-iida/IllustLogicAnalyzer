/*+----------------------------------------------------------------+
  | Title:      StrokeConst.hpp [共通環境]
  | Comment:    ストローク定数
  |	Author:		K.Takayanagi
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Include		インクルードヘッダ
  +----------------------------------------------------------------+*/
#include "env.hpp"
#include "StrokeConst.hpp"

/*+----------------------------------------------------------------+
  |	Define		デファイン定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Struct		構造体定義
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Global		グローバルデータ型定義
  +----------------------------------------------------------------+*/
//------------------
// ストロークラベル
//------------------
const char* g_pArrLabelStrokeType[] = {
    "OFF",
    "SQUARE",
    "CIRCLE",
    
    NULL,
};

//------------------
// フック対象ラベル
//------------------
const char* g_pArrLabelStrokeHookTarget[] = {
    //-----------------------------------------------------
    // 一時枠（※同一レイヤー内部でフックする場合のテンポラリ）
    //-----------------------------------------------------
    "TEMP_A",    "TEMP_B",    "TEMP_C",    "TEMP_D",
    "TEMP_E",    "TEMP_F",    "TEMP_G",    "TEMP_H",
    "TEMP_I",    "TEMP_J",    "TEMP_K",    "TEMP_L",
    "TEMP_M",    "TEMP_N",    "TEMP_O",    "TEMP_P",
    "TEMP_Q",    "TEMP_R",    "TEMP_S",    "TEMP_T",
    "TEMP_U",    "TEMP_V",    "TEMP_W",    "TEMP_X",
    "TEMP_Y",    "TEMP_Z",

    //-----------------------------------------------------
    // 顔／頭（※パーツ単位での細かな組み替えが行われるので用途を限定）
    //-----------------------------------------------------
    // 首と顔の接続：[NkBase/FcBase]
    "NECK_TO_FACE_L",         "NECK_TO_FACE_R",

    // 頭の上部と土台に接続：[HdTop(HdCap)/HdBase]
    "HEAD_TOP_L",             "HEAD_TOP_R",

    // 頭の左右と土台に接続：[HdSide/HdBase]（※閉じる必要がない場合は[HdBase]側で無視する）
    "HEAD_SIDE_L",            "HEAD_SIDE_R",

    // 輪郭と生え際の接続：[FcHairLine/FcBase]
    "HAIR_LINE_L",            "HAIR_LINE_R",

    //-----------------------------------------------------
    // 特殊（※区分をまたぐもの）
    //-----------------------------------------------------
    // 腕から肩（広背筋）：[AmBase/UpBase]
    "ARM_TO_BACK_L",          "ARM_TO_BACK_R",
    
    //-----------------------------------------------------
    // 上半身（※パーツ単位での組み替えがないので汎用的な枠でもつ）
    //-----------------------------------------------------
    "UP_A",    "UP_B",    "UP_C",    "UP_D",
    "UP_E",    "UP_F",    "UP_G",    "UP_H",
    "UP_I",    "UP_J",    "UP_K",    "UP_L",
    "UP_M",    "UP_N",    "UP_O",    "UP_P",
    "UP_Q",    "UP_R",    "UP_S",    "UP_T",
    "UP_U",    "UP_V",    "UP_W",    "UP_X",
    "UP_Y",    "UP_Z",

    //-----------------------------------------------------
    // 下半身（※パーツ単位での組み替えがないので汎用的な枠でもつ）
    //-----------------------------------------------------
    "LOW_A",   "LOW_B",   "LOW_C",   "LOW_D",
    "LOW_E",   "LOW_F",   "LOW_G",   "LOW_H",
    "LOW_I",   "LOW_J",   "LOW_K",   "LOW_L",
    "LOW_M",   "LOW_N",   "LOW_O",   "LOW_P",
    "LOW_Q",   "LOW_R",   "LOW_S",   "LOW_T",
    "LOW_U",   "LOW_V",   "LOW_W",   "LOW_X",
    "LOW_Y",   "LOW_Z",

    //-----------------------------------------------------
    // スーツ（※パーツ単位での組み替えがないので汎用的な枠でもつ）
    //-----------------------------------------------------
    "SUIT_A",   "SUIT_B",   "SUIT_C",   "SUIT_D",
    "SUIT_E",   "SUIT_F",   "SUIT_G",   "SUIT_H",
    "SUIT_I",   "SUIT_J",   "SUIT_K",   "SUIT_L",
    "SUIT_M",   "SUIT_N",   "SUIT_O",   "SUIT_P",
    "SUIT_Q",   "SUIT_R",   "SUIT_S",   "SUIT_T",
    "SUIT_U",   "SUIT_V",   "SUIT_W",   "SUIT_X",
    "SUIT_Y",   "SUIT_Z",

    //-----------------------------------------------------------------
    // 腕（※パーツ単位での組み替えがないので汎用的な枠でもつ）
    // 素材作成時は[ARM_*_0]を指定する（※実行時にスロットインデックスで補正される）
    //（※胴体等のスロットからアクセスする場合は[*_0/*_1]により左右の切り替えが可能）
    //-----------------------------------------------------------------
    "ARM_A_0",  "ARM_A_1",  "ARM_B_0",  "ARM_B_1",
    "ARM_C_0",  "ARM_C_1",  "ARM_D_0",  "ARM_D_1",
    "ARM_E_0",  "ARM_E_1",  "ARM_F_0",  "ARM_F_1",
    "ARM_G_0",  "ARM_G_1",  "ARM_H_0",  "ARM_H_1",
    "ARM_I_0",  "ARM_I_1",  "ARM_J_0",  "ARM_J_1",
    "ARM_K_0",  "ARM_K_1",  "ARM_L_0",  "ARM_L_1",
    "ARM_M_0",  "ARM_M_1",  "ARM_N_0",  "ARM_N_1",
    "ARM_O_0",  "ARM_O_1",  "ARM_P_0",  "ARM_P_1",
    "ARM_Q_0",  "ARM_Q_1",  "ARM_R_0",  "ARM_R_1",
    "ARM_S_0",  "ARM_S_1",  "ARM_T_0",  "ARM_T_1",
    "ARM_U_0",  "ARM_U_1",  "ARM_V_0",  "ARM_V_1",
    "ARM_W_0",  "ARM_W_1",  "ARM_X_0",  "ARM_X_1",
    "ARM_Y_0",  "ARM_Y_1",  "ARM_Z_0",  "ARM_Z_1",

    //-------------------------------------------------------------------
    // 脚（※パーツ単位での組み替えがないので汎用的な枠でもつ）
    // 素材作成時は[LEG_*_0]を指定する（※実行時にスロットインデックスで補正される）
    //（※胴体等のスロットからアクセスする場合は[*_0/*_1]により左右の切り替えが可能）
    //-------------------------------------------------------------------
    "LEG_A_0",  "LEG_A_1",  "LEG_B_0",  "LEG_B_1",
    "LEG_C_0",  "LEG_C_1",  "LEG_D_0",  "LEG_D_1",
    "LEG_E_0",  "LEG_E_1",  "LEG_F_0",  "LEG_F_1",
    "LEG_G_0",  "LEG_G_1",  "LEG_H_0",  "LEG_H_1",
    "LEG_I_0",  "LEG_I_1",  "LEG_J_0",  "LEG_J_1",
    "LEG_K_0",  "LEG_K_1",  "LEG_L_0",  "LEG_L_1",
    "LEG_M_0",  "LEG_M_1",  "LEG_N_0",  "LEG_N_1",
    "LEG_O_0",  "LEG_O_1",  "LEG_P_0",  "LEG_P_1",
    "LEG_Q_0",  "LEG_Q_1",  "LEG_R_0",  "LEG_R_1",
    "LEG_S_0",  "LEG_S_1",  "LEG_T_0",  "LEG_T_1",
    "LEG_U_0",  "LEG_U_1",  "LEG_V_0",  "LEG_V_1",
    "LEG_W_0",  "LEG_W_1",  "LEG_X_0",  "LEG_X_1",
    "LEG_Y_0",  "LEG_Y_1",  "LEG_Z_0",  "LEG_Z_1",

    NULL,
};

//------------------
// タッチ対象ラベル
//------------------
const char* g_pArrLabelStrokeTouchTarget[] = {
    // 一時枠
    "TEMP_A",
    "TEMP_B",
    "TEMP_C",
    "TEMP_D",

    // 固定枠（※１枠につき左右の２つ）
    "A0",       "A1",
    "B0",       "B1",
    "C0",       "C1",
    "D0",       "D1",
    "E0",       "E1",
    "F0",       "F1",
    "G0",       "G1",
    "H0",       "H1",
    
    "I0",       "I1",
    "J0",       "J1",
    "K0",       "K1",
    "L0",       "L1",
    "M0",       "M1",
    "N0",       "N1",
    "O0",       "O1",
    "P0",       "P1",
    
    NULL,
};

//------------------
// フリルラベル
//------------------
const char* g_pArrLabelStrokeFrill[] = {
    "TEST_CIRCLE",
    "TEST_TRIANGLE",
    "TEST_SQUARE",

    NULL,
};

/*+----------------------------------------------------------------+
  |	Prototype	プロトタイプ宣言
  +----------------------------------------------------------------+*/
/*+----------------------------------------------------------------+
  |	Program		プログラム実装
  +----------------------------------------------------------------+*/
